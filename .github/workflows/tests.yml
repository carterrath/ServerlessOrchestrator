name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.21.3'

      - name: Install dependencies
        run: go mod download

      - name: Create .env file
        run: |
          echo POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
          echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
          echo JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} >> .env
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
          echo SENDER_EMAIL=${{ secrets.SENDER_EMAIL }} >> .env
          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo POSTGRES_TEST_DB=${{ secrets.POSTGRES_TEST_DB }} >> .env
          # Ensure the DATABASE_URL is correctly formed if needed
          # echo DATABASE_URL=postgresql://${{ secrets.POSTGRES_USERNAME }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.POSTGRES_HOST }}:${{ secrets.POSTGRES_PORT }}/${{ secrets.POSTGRES_TEST_DB }} >> .env

      - name: Run tests
        run: go test ./...
